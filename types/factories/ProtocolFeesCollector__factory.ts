/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ProtocolFeesCollector,
  ProtocolFeesCollectorInterface,
} from "../ProtocolFeesCollector";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVault",
        name: "_vault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newFlashLoanFeePercentage",
        type: "uint256",
      },
    ],
    name: "FlashLoanFeePercentageChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newSwapFeePercentage",
        type: "uint256",
      },
    ],
    name: "SwapFeePercentageChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "getActionId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAuthorizer",
    outputs: [
      {
        internalType: "contract IAuthorizer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "getCollectedFeeAmounts",
    outputs: [
      {
        internalType: "uint256[]",
        name: "feeAmounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFlashLoanFeePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSwapFeePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFlashLoanFeePercentage",
        type: "uint256",
      },
    ],
    name: "setFlashLoanFeePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newSwapFeePercentage",
        type: "uint256",
      },
    ],
    name: "setSwapFeePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "contract IVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdrawCollectedFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610b50380380610b5083398101604081905261002f9161004c565b3060601b60805260016000556001600160a01b031660a05261007c565b60006020828403121561005e57600080fd5b81516001600160a01b038116811461007557600080fd5b9392505050565b60805160a051610aa86100a86000396000818161012f01526104fb015260006102ac0152610aa86000f3fe608060405234801561001057600080fd5b50600436106100835760003560e01c806338e9922e1461008857806355c676281461009d5780636b6b9f69146100b45780636daefab6146100c7578063851c1bb3146100da578063aaabadc5146100ed578063d877845c14610102578063e42abf351461010a578063fbfa77cf1461012a575b600080fd5b61009b61009636600461071b565b610151565b005b6001545b6040519081526020015b60405180910390f35b61009b6100c236600461071b565b6101ac565b61009b6100d5366004610794565b6101ff565b6100a16100e8366004610817565b6102a8565b6100f561030d565b6040516100ab9190610841565b6002546100a1565b61011d61011836600461087b565b61031c565b6040516100ab919061093f565b6100f57f000000000000000000000000000000000000000000000000000000000000000081565b610159610437565b6101706706f05b59d3b20000821115610258610468565b60018190556040518181527fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc906020015b60405180910390a150565b6101b4610437565b6101ca662386f26fc10000821115610259610468565b60028190556040518181527f5a0b7386237e7f07fa741efc64e59c9387d2cccafec760efed4d53387f20e19a906020016101a1565b61020761047a565b61020f610437565b6102198483610493565b60005b8481101561029657600086868381811061023857610238610983565b905060200201602081019061024d9190610999565b9050600085858481811061026357610263610983565b6020029190910135915061028390506001600160a01b03831685836104a0565b50508061028f906109b6565b905061021c565b506102a16001600055565b5050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000826040516020016102f09291909182526001600160e01b031916602082015260240190565b604051602081830303815290604052805190602001209050919050565b60006103176104f7565b905090565b606081516001600160401b0381111561033757610337610855565b604051908082528060200260200182016040528015610360578160200160208202803683370190505b50905060005b82518110156104315782818151811061038157610381610983565b60200260200101516001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016103b49190610841565b60206040518083038186803b1580156103cc57600080fd5b505afa1580156103e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040491906109df565b82828151811061041657610416610983565b602090810291909101015261042a816109b6565b9050610366565b50919050565b600061044e6000356001600160e01b0319166102a8565b905061046561045d823361058a565b610191610468565b50565b816104765761047681610623565b5050565b61048c60026000541415610190610468565b6002600055565b6104768183146067610468565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526104f2908490610676565b505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663aaabadc56040518163ffffffff1660e01b815260040160206040518083038186803b15801561055257600080fd5b505afa158015610566573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031791906109f8565b60006105946104f7565b6040516326f8aa2160e21b8152600481018590526001600160a01b0384811660248301523060448301529190911690639be2a8849060640160206040518083038186803b1580156105e457600080fd5b505afa1580156105f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061c9190610a15565b9392505050565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b600080836001600160a01b0316836040516106919190610a37565b6000604051808303816000865af19150503d80600081146106ce576040519150601f19603f3d011682016040523d82523d6000602084013e6106d3565b606091505b509150915060008214156106eb573d6000803e3d6000fd5b61071581516000148061070d57508180602001905181019061070d9190610a15565b6101a2610468565b50505050565b60006020828403121561072d57600080fd5b5035919050565b60008083601f84011261074657600080fd5b5081356001600160401b0381111561075d57600080fd5b6020830191508360208260051b850101111561077857600080fd5b9250929050565b6001600160a01b038116811461046557600080fd5b6000806000806000606086880312156107ac57600080fd5b85356001600160401b03808211156107c357600080fd5b6107cf89838a01610734565b909750955060208801359150808211156107e857600080fd5b506107f588828901610734565b90945092505060408601356108098161077f565b809150509295509295909350565b60006020828403121561082957600080fd5b81356001600160e01b03198116811461061c57600080fd5b6001600160a01b0391909116815260200190565b634e487b7160e01b600052604160045260246000fd5b80356108768161077f565b919050565b6000602080838503121561088e57600080fd5b82356001600160401b03808211156108a557600080fd5b818501915085601f8301126108b957600080fd5b8135818111156108cb576108cb610855565b8060051b604051601f19603f830116810181811085821117156108f0576108f0610855565b60405291825284820192508381018501918883111561090e57600080fd5b938501935b82851015610933576109248561086b565b84529385019392850192610913565b98975050505050505050565b6020808252825182820181905260009190848201906040850190845b818110156109775783518352928401929184019160010161095b565b50909695505050505050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156109ab57600080fd5b813561061c8161077f565b60006000198214156109d857634e487b7160e01b600052601160045260246000fd5b5060010190565b6000602082840312156109f157600080fd5b5051919050565b600060208284031215610a0a57600080fd5b815161061c8161077f565b600060208284031215610a2757600080fd5b8151801515811461061c57600080fd5b6000825160005b81811015610a585760208186018101518583015201610a3e565b81811115610a67576000828501525b50919091019291505056fea26469706673582212208796180195885ba3f3d764231bb81c8800939884f3d0d218532ba8bff9adb41e64736f6c63430008090033";

export class ProtocolFeesCollector__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _vault: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ProtocolFeesCollector> {
    return super.deploy(
      _vault,
      overrides || {}
    ) as Promise<ProtocolFeesCollector>;
  }
  getDeployTransaction(
    _vault: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_vault, overrides || {});
  }
  attach(address: string): ProtocolFeesCollector {
    return super.attach(address) as ProtocolFeesCollector;
  }
  connect(signer: Signer): ProtocolFeesCollector__factory {
    return super.connect(signer) as ProtocolFeesCollector__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProtocolFeesCollectorInterface {
    return new utils.Interface(_abi) as ProtocolFeesCollectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProtocolFeesCollector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ProtocolFeesCollector;
  }
}
