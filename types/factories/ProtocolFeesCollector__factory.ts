/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ProtocolFeesCollector,
  ProtocolFeesCollectorInterface,
} from "../ProtocolFeesCollector";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVault",
        name: "_vault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newFlashLoanFeePercentage",
        type: "uint256",
      },
    ],
    name: "FlashLoanFeePercentageChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newSwapFeePercentage",
        type: "uint256",
      },
    ],
    name: "SwapFeePercentageChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "getActionId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAuthorizer",
    outputs: [
      {
        internalType: "contract IAuthorizer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "getCollectedFeeAmounts",
    outputs: [
      {
        internalType: "uint256[]",
        name: "feeAmounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFlashLoanFeePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSwapFeePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFlashLoanFeePercentage",
        type: "uint256",
      },
    ],
    name: "setFlashLoanFeePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newSwapFeePercentage",
        type: "uint256",
      },
    ],
    name: "setSwapFeePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "contract IVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdrawCollectedFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610b5b380380610b5b83398101604081905261002f9161004c565b3060601b60805260016000556001600160a01b031660a05261007c565b60006020828403121561005e57600080fd5b81516001600160a01b038116811461007557600080fd5b9392505050565b60805160a051610ab36100a86000396000818161014a0152610517015260006102c70152610ab36000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063851c1bb311610066578063851c1bb3146100ea578063aaabadc5146100fd578063d877845c1461011d578063e42abf3514610125578063fbfa77cf1461014557600080fd5b806338e9922e1461009857806355c67628146100ad5780636b6b9f69146100c45780636daefab6146100d7575b600080fd5b6100ab6100a6366004610737565b61016c565b005b6001545b6040519081526020015b60405180910390f35b6100ab6100d2366004610737565b6101c7565b6100ab6100e53660046107b1565b61021a565b6100b16100f8366004610835565b6102c3565b610105610328565b6040516001600160a01b0390911681526020016100bb565b6002546100b1565b610138610133366004610885565b610337565b6040516100bb919061094a565b6101057f000000000000000000000000000000000000000000000000000000000000000081565b610174610453565b61018b6706f05b59d3b20000821115610258610484565b60018190556040518181527fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc906020015b60405180910390a150565b6101cf610453565b6101e5662386f26fc10000821115610259610484565b60028190556040518181527f5a0b7386237e7f07fa741efc64e59c9387d2cccafec760efed4d53387f20e19a906020016101bc565b610222610496565b61022a610453565b61023484836104af565b60005b848110156102b15760008686838181106102535761025361098e565b905060200201602081019061026891906109a4565b9050600085858481811061027e5761027e61098e565b6020029190910135915061029e90506001600160a01b03831685836104bc565b5050806102aa906109c1565b9050610237565b506102bc6001600055565b5050505050565b60007f00000000000000000000000000000000000000000000000000000000000000008260405160200161030b9291909182526001600160e01b031916602082015260240190565b604051602081830303815290604052805190602001209050919050565b6000610332610513565b905090565b6060815167ffffffffffffffff8111156103535761035361085f565b60405190808252806020026020018201604052801561037c578160200160208202803683370190505b50905060005b825181101561044d5782818151811061039d5761039d61098e565b60209081029190910101516040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b1580156103e857600080fd5b505afa1580156103fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042091906109ea565b8282815181106104325761043261098e565b6020908102919091010152610446816109c1565b9050610382565b50919050565b600061046a6000356001600160e01b0319166102c3565b905061048161047982336105a6565b610191610484565b50565b81610492576104928161063f565b5050565b6104a860026000541415610190610484565b6002600055565b6104928183146067610484565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261050e908490610692565b505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663aaabadc56040518163ffffffff1660e01b815260040160206040518083038186803b15801561056e57600080fd5b505afa158015610582573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103329190610a03565b60006105b0610513565b6040516326f8aa2160e21b8152600481018590526001600160a01b0384811660248301523060448301529190911690639be2a8849060640160206040518083038186803b15801561060057600080fd5b505afa158015610614573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106389190610a20565b9392505050565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b600080836001600160a01b0316836040516106ad9190610a42565b6000604051808303816000865af19150503d80600081146106ea576040519150601f19603f3d011682016040523d82523d6000602084013e6106ef565b606091505b50915091506000821415610707573d6000803e3d6000fd5b6107318151600014806107295750818060200190518101906107299190610a20565b6101a2610484565b50505050565b60006020828403121561074957600080fd5b5035919050565b60008083601f84011261076257600080fd5b50813567ffffffffffffffff81111561077a57600080fd5b6020830191508360208260051b850101111561079557600080fd5b9250929050565b6001600160a01b038116811461048157600080fd5b6000806000806000606086880312156107c957600080fd5b853567ffffffffffffffff808211156107e157600080fd5b6107ed89838a01610750565b9097509550602088013591508082111561080657600080fd5b5061081388828901610750565b90945092505060408601356108278161079c565b809150509295509295909350565b60006020828403121561084757600080fd5b81356001600160e01b03198116811461063857600080fd5b634e487b7160e01b600052604160045260246000fd5b80356108808161079c565b919050565b6000602080838503121561089857600080fd5b823567ffffffffffffffff808211156108b057600080fd5b818501915085601f8301126108c457600080fd5b8135818111156108d6576108d661085f565b8060051b604051601f19603f830116810181811085821117156108fb576108fb61085f565b60405291825284820192508381018501918883111561091957600080fd5b938501935b8285101561093e5761092f85610875565b8452938501939285019261091e565b98975050505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561098257835183529284019291840191600101610966565b50909695505050505050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156109b657600080fd5b81356106388161079c565b60006000198214156109e357634e487b7160e01b600052601160045260246000fd5b5060010190565b6000602082840312156109fc57600080fd5b5051919050565b600060208284031215610a1557600080fd5b81516106388161079c565b600060208284031215610a3257600080fd5b8151801515811461063857600080fd5b6000825160005b81811015610a635760208186018101518583015201610a49565b81811115610a72576000828501525b50919091019291505056fea2646970667358221220c79cc2d5444036513fe99df722ba214264552889fad59955255408980beb8b5564736f6c63430008090033";

export class ProtocolFeesCollector__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _vault: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ProtocolFeesCollector> {
    return super.deploy(
      _vault,
      overrides || {}
    ) as Promise<ProtocolFeesCollector>;
  }
  getDeployTransaction(
    _vault: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_vault, overrides || {});
  }
  attach(address: string): ProtocolFeesCollector {
    return super.attach(address) as ProtocolFeesCollector;
  }
  connect(signer: Signer): ProtocolFeesCollector__factory {
    return super.connect(signer) as ProtocolFeesCollector__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProtocolFeesCollectorInterface {
    return new utils.Interface(_abi) as ProtocolFeesCollectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProtocolFeesCollector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ProtocolFeesCollector;
  }
}
