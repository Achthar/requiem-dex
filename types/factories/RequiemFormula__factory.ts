/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RequiemFormula,
  RequiemFormulaInterface,
} from "../RequiemFormula";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reserve0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserve1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance0Adjusted",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance1Adjusted",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
    ],
    name: "ensureConstantValue",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveOut",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightIn",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightOut",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    name: "getAmountIn",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveOut",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightIn",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightOut",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    name: "getAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getFactoryAmountsIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
    ],
    name: "getFactoryAmountsOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
    ],
    name: "getFactoryReserveAndWeights",
    outputs: [
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightA",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightB",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "getFactoryWeightsAndSwapFee",
    outputs: [
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeight1",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
    ],
    name: "getOtherToken",
    outputs: [
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "getPairAmountIn",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "getPairAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
    ],
    name: "getReserveAndWeights",
    outputs: [
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tokenWeightA",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeightB",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "getWeightsAndSwapFee",
    outputs: [
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeight1",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "swapFee",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalLiquidity",
        type: "uint256",
      },
      {
        internalType: "uint112",
        name: "reserve0",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "reserve1",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "tokenWeight0",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "tokenWeight1",
        type: "uint32",
      },
      {
        internalType: "uint112",
        name: "collectedFee0",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "collectedFee1",
        type: "uint112",
      },
    ],
    name: "mintLiquidityFee",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    name: "quote",
    outputs: [
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "sortTokens",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061073f6001641c35fedd1560601b036020556001646c3390ecc9605e1b036021556001640cf801476160611b0360225560016431bdb23e1d605f1b0360235560016502fb1d8fe083605b1b0360245560016505b771955b37605a1b036025556001650af67a93bb5160591b0360265560016515060c256cb360581b036027556001651428a2f98d7360581b036028556001654d515663970960561b03602955600165944620b0e70f60551b03602a55600166011c592761c66760541b03602b5560016602214d10d014eb60531b03602c55600166020ade36b7dbef60531b03602d5560016603eab73b3bbfe360521b03602e556001660782ee3593f6d760511b03602f556001661ccf4b44bb4821604f1b0360305560016606e7f88ad8a77760511b0360315560016669f3d1c921891d604d1b03603255600166cb2ff529eb71e5604c1b03603355600166c2d415c3db974b604c1b0360345560016702eb40f9f620fda7604a1b0360355560016705990681d961a1eb60491b03603655600167055e12902701414760491b0360375560016714962dee9dc9764160471b0360385560016704ef57b9b560fab560491b0360395560016712ed7b32a58f552b60471b03603a556001679131271922eaa60760441b03603b556001678b380f3558668c4760441b03603c556001680215f77c045fbe885760421b03603d556001600160831b03603e556001670f577eded5773a1160471b03603f556001680eb5ec597592befbf5603f1b036040556001681c35fedd14b861eb05603e1b036041556001683619c87664579bc94b603d1b0360425560016867c00a3b07ffc01fd7603c1b03604355600168c6f6c8f8739773a7a5603b1b03604455600168bec763f8209b7a72b1603b1b0360455560016902dbb8caad9b7097b91b60391b03604655600169057b3d49dda84556d6f760381b03604755600169054183095b2c8ececf3160381b036048556001690a14517cc6b9457111ef60371b0360495560016913545598e5c23276ccf160361b03604a556001692511882c39c3adea96ff60351b03604b55600169471649d87199aa99075760341b03604c557004429a21a029d4c1457cfbffffffffffff604d55700415bc6d6fb7dd71af2cb3ffffffffffff604e557003eab73b3bbfe282243ce1ffffffffffff604f557003c1771ac9fb6b4c18e229ffffffffffff605055700399e96897690418f785257fffffffffff605155700373fc456c53bb779bf0ea9fffffffffff60525570034f9e8e490c48e67e6ab8bfffffffffff60535570032cbfd4a7adc790560b3337ffffffffff60545570030b50570f6e5d2acca94613ffffffffff6055557002eb40f9f620fda6b56c2861ffffffffff6056557002cc8340ecb0d0f520a6af58ffffffffff6057557002af09481380a0a35cf1ba02ffffffffff605855700292c5bdd3b92ec810287b1b3fffffffff605955700277abdcdab07d5a77ac6d6b9fffffffff605a5570025daf6654b1eaa55fd64df5efffffffff605b55700244c49c648baa98192dce88b7ffffffff605c5570022ce03cd5619a311b2471268bffffffff605d55700215f77c045fbe885654a44a0fffffffff605e556001600160811b03605f557001eaefdbdaaee7421fc4d3ede5ffffffff6060557001d6bd8b2eb257df7e8ca57b09bfffffff6061557001c35fedd14b861eb0443f7f133fffffff6062557001b0ce43b322bcde4a56e8ada5afffffff60635570019f0028ec1fff007f5a195a39dfffffff60645570018ded91f0e72ee74f49b15ba527ffffff60655570017d8ec7f04136f4e5615fd41a63ffffff60665570016ddc6556cdb84bdc8d12d22e6fffffff60675570015ecf52776a1155b5bd8395814f7fffff60685570015060c256cb23b3b3cc3754cf40ffffff6069557001428a2f98d728ae223ddab715be3fffff606a5570013545598e5c23276ccf0ede68034fffff606b557001288c4161ce1d6f54b7f61081194fffff606c5570011c592761c666aa641d5a01a40f17ffff606d55700110a688680a7530515f3e6e6cfdcdffff606e557001056f1b5bedf75c6bcb2ce8aed428ffff606f556ffaadceceeff8a0890f3875f008277fff6070556ff05dc6b27edad306388a600f6ba0bfff6071556fe67a5a25da41063de1495d5b18cdbfff6072556fdcff115b14eedde6fc3aa5353f2e4fff6073556fd3e7a3924312399f9aae2e0f868f8fff6074556fcb2ff529eb71e41582cccd5a1ee26fff6075556fc2d415c3db974ab32a51840c0b67edff6076556fbad03e7d883f69ad5b0a186184e06bff6077556fb320d03b2c343d4829abd6075f0cc5ff6078556fabc25204e02828d73c6e80bcdb1a95bf6079556fa4b16f74ee4bb2040a1ec6c15fbbf2df607a556f9deaf736ac1f569deb1b5ae3f36c130f607b556f976bd9952c7aa957f5937d790ef65037607c556f9131271922eaa6064b73a22d0bd4f2bf607d556f8b380f3558668c46c91c49a2f8e967b9607e556f857ddf0117efa215952912839f6473e6607f55565b613ad98061074e6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80638888a737116100a2578063b19210b011610071578063b19210b0146102e5578063b33d96b0146102f8578063b3923a991461030b578063ca2229791461031e578063d69109371461033157600080fd5b80638888a737146102995780638fabd82d146102ac57806392aec23c146102bf578063ad615dec146102d257600080fd5b80635bff1d92116100e95780635bff1d92146101d95780636350d7741461022f578063671a11b51461025057806367f84adc1461026357806379c91b371461027657600080fd5b8063119220a51461011b5780632bb66e1d14610144578063327494611461017e578063544caa56146101a6575b600080fd5b61012e61012936600461322b565b61035c565b60405161013b91906132b0565b60405180910390f35b6101576101523660046132f4565b6104ec565b6040805163ffffffff9485168152928416602084015292169181019190915260600161013b565b61019161018c36600461332d565b61057a565b6040805192835260208301919091520161013b565b6101b96101b43660046132f4565b6107aa565b604080516001600160a01b0393841681529290911660208301520161013b565b6101ec6101e73660046132f4565b6108a0565b604080516001600160a01b03909716875260208701959095529385019290925263ffffffff908116606085015290811660808401521660a082015260c00161013b565b61024261023d366004613378565b610bc2565b60405190815260200161013b565b61024261025e3660046133cb565b610bff565b61012e61027136600461322b565b610d6b565b610289610284366004613432565b610edd565b604051901515815260200161013b565b6102426102a7366004613378565b611002565b61012e6102ba36600461347f565b611031565b6102426102cd366004613507565b6111a4565b6102426102e0366004613594565b611277565b6102426102f33660046133cb565b61131d565b6101ec61030636600461332d565b611495565b61012e61031936600461347f565b61176e565b61015761032c3660046135c0565b6118cd565b61034461033f3660046132f4565b611a46565b6040516001600160a01b03909116815260200161013b565b6060816103845760405162461bcd60e51b815260040161037b906135dd565b60405180910390fd5b61038f82600161362a565b67ffffffffffffffff8111156103a7576103a7613642565b6040519080825280602002602001820160405280156103d0578160200160208202803683370190505b50905083816000815181106103e7576103e7613658565b60209081029190910101528560005b838110156104af576000806000806000806104388f8c8c8a81811061041d5761041d613658565b905060200201602081019061043291906135c0565b8a611495565b95509550955095509550955061046b89888151811061045957610459613658565b60200260200101518686868686610bff565b8961047789600161362a565b8151811061048757610487613658565b60200260200101818152505085975050505050505080806104a79061366e565b9150506103f6565b50856001600160a01b0316816001600160a01b0316146104e15760405162461bcd60e51b815260040161037b90613689565b509695505050505050565b60405163ca22297960e01b81526001600160a01b038281166004830152600091829182919086169063ca2229799060240160606040518083038186803b15801561053557600080fd5b505afa158015610549573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056d91906136cf565b9250925092509250925092565b60008060008061058a86866107aa565b91509150600080886001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156105ca57600080fd5b505afa1580156105de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106029190613711565b506001600160701b031691506001600160701b03169150886001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561065257600080fd5b505afa158015610666573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068a9190613742565b6001600160a01b0316846001600160a01b031614801561072b5750886001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b1580156106de57600080fd5b505afa1580156106f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107169190613742565b6001600160a01b0316836001600160a01b0316145b6107775760405162461bcd60e51b815260206004820152601d60248201527f5265717569656d466f726d756c613a20496e76616c696420746f6b656e000000604482015260640161037b565b836001600160a01b0316886001600160a01b03161461079757808261079a565b81815b909a909950975050505050505050565b600080826001600160a01b0316846001600160a01b0316141561081b5760405162461bcd60e51b815260206004820152602360248201527f5265717569656d466f726d756c613a204944454e544943414c5f41444452455360448201526253455360e81b606482015260840161037b565b826001600160a01b0316846001600160a01b03161061083b57828461083e565b83835b90925090506001600160a01b0382166108995760405162461bcd60e51b815260206004820152601c60248201527f5265717569656d466f726d756c613a205a45524f5f4144445245535300000000604482015260640161037b565b9250929050565b600080600080600080600080896001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156108e557600080fd5b505afa1580156108f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091d9190613711565b506001600160701b031691506001600160701b031691506000806109408c6118cd565b8097508193508294505050508b6001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561098557600080fd5b505afa158015610999573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bd9190613742565b6001600160a01b03168b6001600160a01b03161415610a5c578b6001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b158015610a0f57600080fd5b505afa158015610a23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a479190613742565b99509297509095509350915084848484610bb4565b8b6001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b158015610a9557600080fd5b505afa158015610aa9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610acd9190613742565b6001600160a01b03168b6001600160a01b03161415610b6c578b6001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b158015610b1f57600080fd5b505afa158015610b33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b579190613742565b99509197509195509350915083858385610bb4565b60405162461bcd60e51b815260206004820152601e60248201527f5265717569656d466f726d756c613a20496e76616c696420746f6b656e410000604482015260640161037b565b505050509295509295509295565b6000806000806000806000610bd78a8a6108a0565b955095509550955095509550610bf188858785878661131d565b9a9950505050505050505050565b6000808711610c625760405162461bcd60e51b815260206004820152602960248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f494e50604482015268155517d05353d5539560ba1b606482015260840161037b565b600086118015610c725750600085115b610c8e5760405162461bcd60e51b815260040161037b9061375f565b6000610cb4610c9f846127106137a5565b63ffffffff1689611bcd90919063ffffffff16565b90508363ffffffff168563ffffffff161415610cfc57610ce081610cda89612710611bcd565b90611be0565b610cea8783611bcd565b610cf491906137e0565b915050610d61565b60008080610d1084610cda8c612710611bcd565b9050610d2981610d228c612710611bcd565b8a8a611bfd565b90935091506000610d3a8a85611bcd565b905060ff83168a901b84610d4e82846137f4565b610d5891906137e0565b96505050505050505b9695505050505050565b606081610d8a5760405162461bcd60e51b815260040161037b906135dd565b610d9582600161362a565b67ffffffffffffffff811115610dad57610dad613642565b604051908082528060200260200182016040528015610dd6578160200160208202803683370190505b509050838160018351610de991906137f4565b81518110610df957610df9613658565b602090810291909101015284825b8015610eab5760008080808080610e348f8c8c610e2560018c6137f4565b81811061041d5761041d613658565b955095509550955095509550610e67898881518110610e5557610e55613658565b6020026020010151858785878661131d565b89610e7360018a6137f4565b81518110610e8357610e83613658565b6020026020010181815250508597505050505050508080610ea39061380b565b915050610e07565b50866001600160a01b0316816001600160a01b0316146104e15760405162461bcd60e51b815260040161037b90613822565b60008163ffffffff1660321415610f0b57610ef88686611bcd565b610f028585611bcd565b10159050610ff9565b858410158015610f1b5750848310155b15610f2857506001610ff9565b858411158015610f385750848311155b15610f4557506000610ff9565b816000610f538260646137a5565b90506000806000808b8a10610f9157610f6f8b8a876032611bfd565b90945060ff169250610f848a8d886032611bfd565b90925060ff169050610fbc565b610f9e8c8b886032611bfd565b90945060ff169250610fb3898c876032611bfd565b90925060ff1690505b6000818410610fcb5781610fcd565b835b9050610fd981856137f4565b9350610fe581836137f4565b9290921c9390921c92909211159450505050505b95945050505050565b60008060008060008060006110178a8a6108a0565b955095509550955095509550610bf1888686868686610bff565b6060816110505760405162461bcd60e51b815260040161037b906135dd565b61105b82600161362a565b67ffffffffffffffff81111561107357611073613642565b60405190808252806020026020018201604052801561109c578160200160208202803683370190505b50905083816000815181106110b3576110b3613658565b60209081029190910101528560005b83811015611168576000806000806000806111038b8b898181106110e8576110e8613658565b90506020020160208101906110fd91906135c0565b896108a0565b95509550955095509550955061112489888151811061045957610459613658565b8961113089600161362a565b8151811061114057611140613658565b60200260200101818152505085975050505050505080806111609061366e565b9150506110c2565b50856001600160a01b0316816001600160a01b03161461119a5760405162461bcd60e51b815260040161037b90613689565b5095945050505050565b60006001600160701b03831615611210576000806111e36111d16001600160701b03878116908c16611be0565b8a6001600160701b0316896064611bfd565b90925060ff16905061120b8a611205836111fd8387611bcd565b87911c611be0565b90611d3a565b925050505b6001600160701b0382161561126c5760008061124d61123b6001600160701b03868116908b16611be0565b896001600160701b0316886064611bfd565b90925060ff1690506112678a611205836111fd8387611bcd565b925050505b979650505050505050565b60008084116112d45760405162461bcd60e51b815260206004820152602360248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f414d4f60448201526215539560ea1b606482015260840161037b565b6000831180156112e45750600082115b6113005760405162461bcd60e51b815260040161037b9061375f565b8261130b8584611bcd565b61131591906137e0565b949350505050565b60008087116113815760405162461bcd60e51b815260206004820152602a60248201527f5265717569656d466f726d756c613a20494e53554646494349454e545f4f555460448201526914155517d05353d5539560b21b606482015260840161037b565b6000861180156113915750600085115b6113ad5760405162461bcd60e51b815260040161037b9061375f565b8263ffffffff168463ffffffff16141561141f5760006113d96127106113d3898b611bcd565b90611bcd565b905060006114056113ec856127106137a5565b63ffffffff166113d38b8a611d3a90919063ffffffff16565b90506114166001610cda83856137e0565b92505050610d61565b6000808061142d888b611d3a565b905061143b8882888a611bfd565b9093509150600061144e8a612710611bcd565b9050600061145c8286611bcd565b905060ff841682901b610d5860016114768a6127106137a5565b63ffffffff1660ff881661148a85876137f4565b610cda92911c6137e0565b600080600080600080600080896001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156114da57600080fd5b505afa1580156114ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115129190613711565b506001600160701b031691506001600160701b031691506000806115368d8d6104ec565b8097508193508294505050508b6001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561157b57600080fd5b505afa15801561158f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115b39190613742565b6001600160a01b03168b6001600160a01b03161415611652578b6001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561160557600080fd5b505afa158015611619573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163d9190613742565b9950929750909550935091508484848461175e565b8b6001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561168b57600080fd5b505afa15801561169f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116c39190613742565b6001600160a01b03168b6001600160a01b03161415610b6c578b6001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561171557600080fd5b505afa158015611729573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061174d9190613742565b995091975091955093509150838583855b5050505093975093979195509350565b60608161178d5760405162461bcd60e51b815260040161037b906135dd565b61179882600161362a565b67ffffffffffffffff8111156117b0576117b0613642565b6040519080825280602002602001820160405280156117d9578160200160208202803683370190505b5090508381600183516117ec91906137f4565b815181106117fc576117fc613658565b602090810291909101015284825b801561189b57600080808080806118368b8b61182760018b6137f4565b8181106110e8576110e8613658565b955095509550955095509550611857898881518110610e5557610e55613658565b8961186360018a6137f4565b8151811061187357611873613658565b60200260200101818152505085975050505050505080806118939061380b565b91505061180a565b50866001600160a01b0316816001600160a01b03161461119a5760405162461bcd60e51b815260040161037b90613822565b6000806000836001600160a01b03166332bfe4696040518163ffffffff1660e01b8152600401604080518083038186803b15801561190a57600080fd5b505afa92505050801561193a575060408051601f3d908101601f1916820190925261193791810190613867565b60015b6119c357611946613896565b806308c379a01415611980575061195b6138ed565b806119665750611982565b8060405162461bcd60e51b815260040161037b9190613977565b505b3d8080156119ac576040519150601f19603f3d011682016040523d82523d6000602084013e6119b1565b606091505b50603280601e93509350935050611a3f565b8181876001600160a01b031663d4cadf686040518163ffffffff1660e01b815260040160206040518083038186803b1580156119fe57600080fd5b505afa158015611a12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a3691906139cc565b94509450945050505b9193909250565b600080836001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b158015611a8257600080fd5b505afa158015611a96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aba9190613742565b90506000846001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b158015611af757600080fd5b505afa158015611b0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b2f9190613742565b9050836001600160a01b0316826001600160a01b03161480611b625750836001600160a01b0316816001600160a01b0316145b611bae5760405162461bcd60e51b815260206004820152601e60248201527f5265717569656d466f726d756c613a20496e76616c696420746f6b656e410000604482015260640161037b565b836001600160a01b0316826001600160a01b0316146113155781610ff9565b6000611bd982846139e9565b9392505050565b600080611bed838561362a565b9050611bd9848210156000611d48565b60008084861015611c505760405162461bcd60e51b815260206004820152601b60248201527f6e6f7420737570706f7274205f626173654e203c205f62617365440000000000604482015260640161037b565b600160811b8610611c6057600080fd5b60008086611c726001607f1b8a6139e9565b611c7c91906137e0565b905070015bf0a8b1457695355fb8ac404e7a79e3811015611ca757611ca081611d5a565b9150611cb3565b611cb0816122c9565b91505b60008563ffffffff168763ffffffff1684611cce91906139e9565b611cd891906137e0565b9050600160831b811015611cfd57611cef816123b7565b607f94509450505050611d31565b6000611d08826129e2565b9050611d24611d1882607f613a08565b60ff1683901c82612a95565b95509350611d3192505050565b94509492505050565b6000611bd9838360016130f3565b81611d5657611d568161310e565b5050565b6000808080806fd3094c70f034de4b96ff7d5b6f99fcd88610611db357611d856001607e1b8561362a565b93506fd3094c70f034de4b96ff7d5b6f99fcd8611da66001607f1b886139e9565b611db091906137e0565b95505b6fa45af1e1f40c333b3de1db4dd55f29a78610611e0657611dd86001607d1b8561362a565b93506fa45af1e1f40c333b3de1db4dd55f29a7611df96001607f1b886139e9565b611e0391906137e0565b95505b6f910b022db7ae67ce76b441c27035c6a18610611e5957611e2b6001607c1b8561362a565b93506f910b022db7ae67ce76b441c27035c6a1611e4c6001607f1b886139e9565b611e5691906137e0565b95505b6f88415abbe9a76bead8d00cf112e4d4a88610611eac57611e7e6001607b1b8561362a565b93506f88415abbe9a76bead8d00cf112e4d4a8611e9f6001607f1b886139e9565b611ea991906137e0565b95505b6f84102b00893f64c705e841d5d4064bd38610611eff57611ed16001607a1b8561362a565b93506f84102b00893f64c705e841d5d4064bd3611ef26001607f1b886139e9565b611efc91906137e0565b95505b6f8204055aaef1c8bd5c3259f4822735a28610611f5257611f24600160791b8561362a565b93506f8204055aaef1c8bd5c3259f4822735a2611f456001607f1b886139e9565b611f4f91906137e0565b95505b6f810100ab00222d861931c15e39b44e998610611fa557611f77600160781b8561362a565b93506f810100ab00222d861931c15e39b44e99611f986001607f1b886139e9565b611fa291906137e0565b95505b6f808040155aabbbe9451521693554f7338610611ff857611fca600160771b8561362a565b93506f808040155aabbbe9451521693554f733611feb6001607f1b886139e9565b611ff591906137e0565b95505b6120066001607f1b876137f4565b92508291506001607f1b61201a83806139e9565b61202491906137e0565b9050600160801b61203584826137f4565b61203f90846139e9565b61204991906137e0565b612053908561362a565b93506001607f1b61206482846139e9565b61206e91906137e0565b9150600160811b61208f846faaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa6137f4565b61209990846139e9565b6120a391906137e0565b6120ad908561362a565b93506001607f1b6120be82846139e9565b6120c891906137e0565b9150600360801b6120e9846f999999999999999999999999999999996137f4565b6120f390846139e9565b6120fd91906137e0565b612107908561362a565b93506001607f1b61211882846139e9565b61212291906137e0565b9150600160821b612143846f924924924924924924924924924924926137f4565b61214d90846139e9565b61215791906137e0565b612161908561362a565b93506001607f1b61217282846139e9565b61217c91906137e0565b9150600560801b61219d846f8e38e38e38e38e38e38e38e38e38e38e6137f4565b6121a790846139e9565b6121b191906137e0565b6121bb908561362a565b93506001607f1b6121cc82846139e9565b6121d691906137e0565b9150600360811b6121f7846f8ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b6137f4565b61220190846139e9565b61220b91906137e0565b612215908561362a565b93506001607f1b61222682846139e9565b61223091906137e0565b9150600760801b612251846f89d89d89d89d89d89d89d89d89d89d896137f4565b61225b90846139e9565b61226591906137e0565b61226f908561362a565b93506001607f1b61228082846139e9565b61228a91906137e0565b9150600160831b6122ab846f888888888888888888888888888888886137f4565b6122b590846139e9565b6122bf91906137e0565b610d61908561362a565b600080600160801b831061230d5760006122ef6122ea6001607f1b866137e0565b613161565b60ff811694851c94909150612309906001607f1b906139e9565b9150505b6001607f1b83111561238257607f5b60ff811615612380576001607f1b61233485806139e9565b61233e91906137e0565b9350600160801b841061237057600193841c9361235b9082613a08565b60ff166001901b8261236d919061362a565b91505b61237981613a2b565b905061231c565b505b6f05b9de1d10bf4103d647b0955897ba806123ad6f03f80fe03f80fe03f80fe03f80fe03f8836139e9565b611bd991906137e0565b60008080806123ca6001607c1b86613a48565b91508190506001607f1b6123de82806139e9565b6123e891906137e0565b90506123fc816710e1b3be415a00006139e9565b612406908461362a565b92506001607f1b61241783836139e9565b61242191906137e0565b9050612435816705a0913f6b1e00006139e9565b61243f908461362a565b92506001607f1b61245083836139e9565b61245a91906137e0565b905061246e81670168244fdac780006139e9565b612478908461362a565b92506001607f1b61248983836139e9565b61249391906137e0565b90506124a681664807432bc180006139e9565b6124b0908461362a565b92506001607f1b6124c183836139e9565b6124cb91906137e0565b90506124de81660c0135dca040006139e9565b6124e8908461362a565b92506001607f1b6124f983836139e9565b61250391906137e0565b9050612516816601b707b1cdc0006139e9565b612520908461362a565b92506001607f1b61253183836139e9565b61253b91906137e0565b905061254d816536e0f639b8006139e9565b612557908461362a565b92506001607f1b61256883836139e9565b61257291906137e0565b905061258481650618fee9f8006139e9565b61258e908461362a565b92506001607f1b61259f83836139e9565b6125a991906137e0565b90506125ba81649c197dcc006139e9565b6125c4908461362a565b92506001607f1b6125d583836139e9565b6125df91906137e0565b90506125f081640e30dce4006139e9565b6125fa908461362a565b92506001607f1b61260b83836139e9565b61261591906137e0565b90506126268164012ebd13006139e9565b612630908461362a565b92506001607f1b61264183836139e9565b61264b91906137e0565b905061265b816317499f006139e9565b612665908461362a565b92506001607f1b61267683836139e9565b61268091906137e0565b9050612690816301a9d4806139e9565b61269a908461362a565b92506001607f1b6126ab83836139e9565b6126b591906137e0565b90506126c481621c63806139e9565b6126ce908461362a565b92506001607f1b6126df83836139e9565b6126e991906137e0565b90506126f8816201c6386139e9565b612702908461362a565b92506001607f1b61271383836139e9565b61271d91906137e0565b905061272b81611ab86139e9565b612735908461362a565b92506001607f1b61274683836139e9565b61275091906137e0565b905061275e8161017c6139e9565b612768908461362a565b92506001607f1b61277983836139e9565b61278391906137e0565b90506127908160146139e9565b61279a908461362a565b92506001607f1b6127ab83836139e9565b6127b591906137e0565b90506127c28160016139e9565b6127cc908461362a565b92506001607f1b826127e66721c3677c82b40000866137e0565b6127f0919061362a565b6127fa919061362a565b92506001607c1b8516156128425770018ebef9eac820ae8682b9793ac6d1e776612835847001c3d6a24ed82218787d624d3e5eba95f96139e9565b61283f91906137e0565b92505b6001607d1b851615612888577001368b2fc6f9609fe7aceb46aa619baed461287b8470018ebef9eac820ae8682b9793ac6d1e7786139e9565b61288591906137e0565b92505b6001607e1b8516156128cd576fbc5ab1b16779be3575bd8f0520a9f21f6128c0847001368b2fc6f9609fe7aceb46aa619baed56139e9565b6128ca91906137e0565b92505b6001607f1b851615612911576f454aaa8efe072e7f6ddbab84b40a55c9612904846fbc5ab1b16779be3575bd8f0520a9f21e6139e9565b61290e91906137e0565b92505b600160801b851615612955576f0960aadc109e7a3bf4578099615711ea612948846f454aaa8efe072e7f6ddbab84b40a55c56139e9565b61295291906137e0565b92505b600160811b851615612998576e2bf84208204f5977f9a8cf01fdce3d61298b846f0960aadc109e7a3bf4578099615711d76139e9565b61299591906137e0565b92505b600160821b8516156129d9576d03c6ab775dd0b95b4cbee7e65d116129cc846e2bf84208204f5977f9a8cf01fdc3076139e9565b6129d691906137e0565b92505b50909392505050565b60006020607f5b60ff81166129f8836001613a5c565b60ff161015612a4b5760006002612a0f8385613a5c565b612a199190613a81565b90508460008260ff1660808110612a3257612a32613658565b015410612a4157809250612a45565b8091505b506129e9565b8360008260ff1660808110612a6257612a62613658565b015410612a70579392505050565b8360008360ff1660808110612a8757612a87613658565b015410610116575092915050565b6000828160ff8416612aa783806139e9565b901c9150612ac5826f03442c4e6074a82f1797f72ac00000006139e9565b612acf908261362a565b905060ff8416612adf86846139e9565b901c9150612afd826f0116b96f757c380fb287fd0e400000006139e9565b612b07908261362a565b905060ff8416612b1786846139e9565b901c9150612b34826e45ae5bdd5f0e03eca1ff43900000006139e9565b612b3e908261362a565b905060ff8416612b4e86846139e9565b901c9150612b6b826e0defabf91302cd95b9ffda500000006139e9565b612b75908261362a565b905060ff8416612b8586846139e9565b901c9150612ba2826e02529ca9832b22439efff9b80000006139e9565b612bac908261362a565b905060ff8416612bbc86846139e9565b901c9150612bd8826d54f1cf12bd04e516b6da880000006139e9565b612be2908261362a565b905060ff8416612bf286846139e9565b901c9150612c0e826d0a9e39e257a09ca2d6db510000006139e9565b612c18908261362a565b905060ff8416612c2886846139e9565b901c9150612c44826d012e066e7b839fa050c3090000006139e9565b612c4e908261362a565b905060ff8416612c5e86846139e9565b901c9150612c79826c1e33d7d926c329a1ad1a8000006139e9565b612c83908261362a565b905060ff8416612c9386846139e9565b901c9150612cae826c02bee513bdb4a6b19b5f8000006139e9565b612cb8908261362a565b905060ff8416612cc886846139e9565b901c9150612ce2826b3a9316fa79b88eccf2a000006139e9565b612cec908261362a565b905060ff8416612cfc86846139e9565b901c9150612d16826b048177ebe1fa8123752000006139e9565b612d20908261362a565b905060ff8416612d3086846139e9565b901c9150612d49826a5263fe90242dcbacf000006139e9565b612d53908261362a565b905060ff8416612d6386846139e9565b901c9150612d7c826a057e22099c030d941000006139e9565b612d86908261362a565b905060ff8416612d9686846139e9565b901c9150612dae826957e22099c030d94100006139e9565b612db8908261362a565b905060ff8416612dc886846139e9565b901c9150612de08269052b6b545699763100006139e9565b612dea908261362a565b905060ff8416612dfa86846139e9565b901c9150612e1182684985f67696bf7480006139e9565b612e1b908261362a565b905060ff8416612e2b86846139e9565b901c9150612e42826803dea12ea99e4980006139e9565b612e4c908261362a565b905060ff8416612e5c86846139e9565b901c9150612e72826731880f2214b6e0006139e9565b612e7c908261362a565b905060ff8416612e8c86846139e9565b901c9150612ea28267025bcff56eb360006139e9565b612eac908261362a565b905060ff8416612ebc86846139e9565b901c9150612ed182661b722e10ab10006139e9565b612edb908261362a565b905060ff8416612eeb86846139e9565b901c9150612f00826601317c700770006139e9565b612f0a908261362a565b905060ff8416612f1a86846139e9565b901c9150612f2e82650cba84aafa006139e9565b612f38908261362a565b905060ff8416612f4886846139e9565b901c9150612f5b826482573a0a006139e9565b612f65908261362a565b905060ff8416612f7586846139e9565b901c9150612f88826405035ad9006139e9565b612f92908261362a565b905060ff8416612fa286846139e9565b901c9150612fb482632f881b006139e9565b612fbe908261362a565b905060ff8416612fce86846139e9565b901c9150612fe0826301b293406139e9565b612fea908261362a565b905060ff8416612ffa86846139e9565b901c915061300b82620efc406139e9565b613015908261362a565b905060ff841661302586846139e9565b901c915061303582617fe06139e9565b61303f908261362a565b905060ff841661304f86846139e9565b901c915061305f826104206139e9565b613069908261362a565b905060ff841661307986846139e9565b901c91506130888260216139e9565b613092908261362a565b905060ff84166130a286846139e9565b901c91506130b18260016139e9565b6130bb908261362a565b9050600160ff85161b856130df6f0688589cc0e9505e2f2fee5580000000846137e0565b6130e9919061362a565b610ff9919061362a565b60006131028484111583611d48565b6000610ff984866137f4565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b600080610100831015613194575b600183111561318f57600192831c926131889082613a5c565b905061316f565b6131c8565b60805b60ff8116156131c657600160ff82161b84106131bb5760ff81169390931c92908117905b60011c607f16613197565b505b92915050565b6001600160a01b03811681146131e357600080fd5b50565b60008083601f8401126131f857600080fd5b50813567ffffffffffffffff81111561321057600080fd5b6020830191508360208260051b850101111561089957600080fd5b60008060008060008060a0878903121561324457600080fd5b863561324f816131ce565b9550602087013561325f816131ce565b9450604087013561326f816131ce565b935060608701359250608087013567ffffffffffffffff81111561329257600080fd5b61329e89828a016131e6565b979a9699509497509295939492505050565b6020808252825182820181905260009190848201906040850190845b818110156132e8578351835292840192918401916001016132cc565b50909695505050505050565b6000806040838503121561330757600080fd5b8235613312816131ce565b91506020830135613322816131ce565b809150509250929050565b60008060006060848603121561334257600080fd5b833561334d816131ce565b9250602084013561335d816131ce565b9150604084013561336d816131ce565b809150509250925092565b60008060006060848603121561338d57600080fd5b8335613398816131ce565b925060208401356133a8816131ce565b929592945050506040919091013590565b63ffffffff811681146131e357600080fd5b60008060008060008060c087890312156133e457600080fd5b8635955060208701359450604087013593506060870135613404816133b9565b92506080870135613414816133b9565b915060a0870135613424816133b9565b809150509295509295509295565b600080600080600060a0868803121561344a57600080fd5b853594506020860135935060408601359250606086013591506080860135613471816133b9565b809150509295509295909350565b60008060008060006080868803121561349757600080fd5b85356134a2816131ce565b945060208601356134b2816131ce565b935060408601359250606086013567ffffffffffffffff8111156134d557600080fd5b6134e1888289016131e6565b969995985093965092949392505050565b6001600160701b03811681146131e357600080fd5b600080600080600080600060e0888a03121561352257600080fd5b873596506020880135613534816134f2565b95506040880135613544816134f2565b94506060880135613554816133b9565b93506080880135613564816133b9565b925060a0880135613574816134f2565b915060c0880135613584816134f2565b8091505092959891949750929550565b6000806000606084860312156135a957600080fd5b505081359360208301359350604090920135919050565b6000602082840312156135d257600080fd5b8135611bd9816131ce565b6020808252601c908201527f5265717569656d466f726d756c613a20494e56414c49445f5041544800000000604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000821982111561363d5761363d613614565b500190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060001982141561368257613682613614565b5060010190565b60208082526026908201527f5265717569656d466f726d756c613a20494e56414c49445f544f4b454e5f4f556040820152650a8bea082a8960d31b606082015260800190565b6000806000606084860312156136e457600080fd5b83516136ef816133b9565b6020850151909350613700816133b9565b604085015190925061336d816133b9565b60008060006060848603121561372657600080fd5b8351613731816134f2565b6020850151909350613700816134f2565b60006020828403121561375457600080fd5b8151611bd9816131ce565b60208082526026908201527f5265717569656d466f726d756c613a20494e53554646494349454e545f4c495160408201526555494449545960d01b606082015260800190565b600063ffffffff838116908316818110156137c2576137c2613614565b039392505050565b634e487b7160e01b600052601260045260246000fd5b6000826137ef576137ef6137ca565b500490565b60008282101561380657613806613614565b500390565b60008161381a5761381a613614565b506000190190565b60208082526025908201527f5265717569656d466f726d756c613a20494e56414c49445f544f4b454e5f494e6040820152640bea082a8960db1b606082015260800190565b6000806040838503121561387a57600080fd5b8251613885816133b9565b6020840151909250613322816133b9565b600060033d11156138af5760046000803e5060005160e01c5b90565b601f8201601f1916810167ffffffffffffffff811182821017156138e657634e487b7160e01b600052604160045260246000fd5b6040525050565b600060443d10156138fb5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561392b57505050505090565b82850191508151818111156139435750505050505090565b843d870101602082850101111561395d5750505050505090565b61396c602082860101876138b2565b509095945050505050565b600060208083528351808285015260005b818110156139a457858101830151858201604001528201613988565b818111156139b6576000604083870101525b50601f01601f1916929092016040019392505050565b6000602082840312156139de57600080fd5b8151611bd9816133b9565b6000816000190483118215151615613a0357613a03613614565b500290565b600060ff821660ff841680821015613a2257613a22613614565b90039392505050565b600060ff821680613a3e57613a3e613614565b6000190192915050565b600082613a5757613a576137ca565b500690565b600060ff821660ff84168060ff03821115613a7957613a79613614565b019392505050565b600060ff831680613a9457613a946137ca565b8060ff8416049150509291505056fea2646970667358221220aac5ffc830ae49560b765658239d5a3821a568692c3fadbf418edefd2f0650b364736f6c63430008090033";

export class RequiemFormula__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RequiemFormula> {
    return super.deploy(overrides || {}) as Promise<RequiemFormula>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RequiemFormula {
    return super.attach(address) as RequiemFormula;
  }
  connect(signer: Signer): RequiemFormula__factory {
    return super.connect(signer) as RequiemFormula__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RequiemFormulaInterface {
    return new utils.Interface(_abi) as RequiemFormulaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RequiemFormula {
    return new Contract(address, _abi, signerOrProvider) as RequiemFormula;
  }
}
