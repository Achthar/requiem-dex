/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BalanceAllocationMock,
  BalanceAllocationMockInterface,
} from "../BalanceAllocationMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
    ],
    name: "cash",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "cashToManaged",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseCash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "sharedCash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sharedManaged",
        type: "bytes32",
      },
    ],
    name: "fromSharedToBalanceA",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "sharedCash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sharedManaged",
        type: "bytes32",
      },
    ],
    name: "fromSharedToBalanceB",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseCash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
    ],
    name: "isNotZero",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
    ],
    name: "isZero",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
    ],
    name: "lastChangeBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
    ],
    name: "managed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "managedToCash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "newManaged",
        type: "uint256",
      },
    ],
    name: "setManaged",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_managed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lastChangeBlock",
        type: "uint256",
      },
    ],
    name: "toBalance",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tokenABalance",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "tokenBBalance",
        type: "bytes32",
      },
    ],
    name: "toSharedCash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tokenABalance",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "tokenBBalance",
        type: "bytes32",
      },
    ],
    name: "toSharedManaged",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
    ],
    name: "total",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "balances",
        type: "bytes32[]",
      },
    ],
    name: "totals",
    outputs: [
      {
        internalType: "uint256[]",
        name: "result",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506108b8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100db5760003560e01c8063256da630146100e05780633a1f6e15146101065780633f7e18a5146101295780634ca27dff1461013c57806351b311f01461014f578063595e098a146101625780637171e37f146101755780637323e7ca14610188578063736ea8321461019b57806393b9de4c146101ae578063a44bed62146101c1578063ac0177a9146101d4578063ce833077146101e7578063d6c752c5146101fa578063dd6469171461021a578063e1ac20221461022d578063fba56f5214610240575b600080fd5b6100f36100ee36600461068e565b610253565b6040519081526020015b60405180910390f35b6101196101143660046106b0565b610266565b60405190151581526020016100fd565b6100f36101373660046106b0565b610277565b6100f361014a3660046106b0565b610283565b6100f361015d36600461068e565b61028e565b6100f361017036600461068e565b61029a565b6100f361018336600461068e565b6102a6565b6100f361019636600461068e565b6102b2565b6100f36101a936600461068e565b6102be565b6100f36101bc36600461068e565b6102ca565b6100f36101cf3660046106b0565b6102d6565b6100f36101e236600461068e565b6102e1565b6100f36101f536600461068e565b6102ed565b61020d6102083660046106df565b6102f9565b6040516100fd919061079c565b6101196102283660046106b0565b61030b565b6100f361023b3660046107e0565b610316565b6100f361024e3660046106b0565b61032b565b600061025f8383610336565b9392505050565b60006102718261038a565b92915050565b60006102718260e01c90565b60006102718261039c565b600061025f83836103ab565b600061025f83836103d1565b600061025f8383610413565b600061025f8383610442565b600061025f8383610460565b600061025f8383610483565b6000610271826104b5565b600061025f83836104c1565b600061025f83836104d8565b6060610304826104ef565b5092915050565b6000610271826105b7565b60006103238484846105c4565b949350505050565b60006102718261063a565b60008082610343856104b5565b61034d9190610822565b905060008361035b8661039c565b6103659190610839565b905060006103738660e01c90565b90506103808383836105c4565b9695505050505050565b6000610395826105b7565b1592915050565b60701c6001600160701b031690565b600061025f6103b98461039c565b6103c28461039c565b6103cc8660e01c90565b6105c4565b6000806103f06103e18560e01c90565b6103eb8560e01c90565b610658565b90506103236103fe856104b5565b610407856104b5565b8363ffffffff1661066f565b60008082610420856104b5565b61042a9190610839565b90506000836104388661039c565b6103659190610822565b600061025f6104508461039c565b6104598461039c565b600061066f565b60008061046c846104b5565b90504361047a8285836105c4565b95945050505050565b60008082610490856104b5565b61049a9190610839565b905060006104a78561039c565b9050436103808383836105c4565b6001600160701b031690565b600061025f6104cf846104b5565b6103c2846104b5565b600080826104e5856104b5565b61049a9190610822565b6060600082516001600160401b0381111561050c5761050c6106c9565b604051908082528060200260200182016040528015610535578160200160208202803683370190505b5091506000905060005b82518110156105b157600084828151811061055c5761055c610851565b6020026020010151905061056f8161063a565b84838151811061058157610581610851565b60200260200101818152505061059b836103eb8360e01c90565b92505080806105a990610867565b91505061053f565b50915091565b6001600160e01b03161590565b6000806105d18486610839565b90508481101580156105e65750600160701b81105b61062f5760405162461bcd60e51b815260206004820152601660248201527542414c414e43455f544f54414c5f4f564552464c4f5760501b604482015260640160405180910390fd5b61047a85858561066f565b60006106458261039c565b61064e836104b5565b6102719190610839565b600081831015610668578161025f565b5090919050565b600083610684607085901b60e085901b610839565b6103239190610839565b600080604083850312156106a157600080fd5b50508035926020909101359150565b6000602082840312156106c257600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156106f257600080fd5b82356001600160401b038082111561070957600080fd5b818501915085601f83011261071d57600080fd5b81358181111561072f5761072f6106c9565b8060051b604051601f19603f83011681018181108582111715610754576107546106c9565b60405291825284820192508381018501918883111561077257600080fd5b938501935b8285101561079057843584529385019392850192610777565b98975050505050505050565b6020808252825182820181905260009190848201906040850190845b818110156107d4578351835292840192918401916001016107b8565b50909695505050505050565b6000806000606084860312156107f557600080fd5b505081359360208301359350604090920135919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156108345761083461080c565b500390565b6000821982111561084c5761084c61080c565b500190565b634e487b7160e01b600052603260045260246000fd5b600060001982141561087b5761087b61080c565b506001019056fea26469706673582212205dd5c22d319be8d83519a1ba21b4b00d27b420d7e95cdaa69da01a9ea716ebd864736f6c63430008090033";

export class BalanceAllocationMock__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BalanceAllocationMock> {
    return super.deploy(overrides || {}) as Promise<BalanceAllocationMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BalanceAllocationMock {
    return super.attach(address) as BalanceAllocationMock;
  }
  connect(signer: Signer): BalanceAllocationMock__factory {
    return super.connect(signer) as BalanceAllocationMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BalanceAllocationMockInterface {
    return new utils.Interface(_abi) as BalanceAllocationMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BalanceAllocationMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BalanceAllocationMock;
  }
}
